docker -zk
获取镜像:

docker pull zookeeper:3.5
运行:

docker run --name zookeeper -p 2181:2181 -d zookeeper:3.5
操作:

在docker中进入zookeeper命令行;
docker exec -it zookeeper bash
进入zookeeper的bin目录:
cd bin
使用zookeeper client访问zookeeper服务:
./zkCli.sh
查看
ls /
查看所有services:
ls /services
查看waiter-service的信息:
ls /services/waiter-service
根据[id]查看相关服务的详细信息(id是动态的):
ls /services/waiter-service/[id]
示例:

ls /services/waiter-service/54ef0739-0627-478f-ad5a-4b7287854da4
获取相关服务的详细信息(id是动态的):
get /services/waiter-service/[id]
示例:

get /services/waiter-service/54ef0739-0627-478f-ad5a-4b7287854da4
获取相关服务的详细信息(id是动态的):
get /services/customer-service/[id]
示例:

get /services/customer-service/9df270b5-637a-451e-b69c-14f222f4cf3a


docker - Nacos
官方指引 https://hub.docker.com/r/nacos/nacos-server
获取镜像
 docker pull nacos/nacos-server
运行镜像
 docker run -- name nacos -d -p 8848:8848 -e MODE=Standalone nacos/nacos-server

 用户名密码为nacos
 
 windows10 下docker搭建consul单机和集群基础配置如下：
单机
# docker获取consul并创建容器的步骤
# docker pull consul
# docker run --name consul -d -p 8500:8500 -p 8600:8600/udp consul

集群
# 建立consul集群命令步骤
# 建立第一个容器，并启动第一个consul服务
    # docker run --name consul1 -d -p 8500:8500 -p 8300:8300 -p 8301:8301 -p 8302:8302 -p 8600:8600 consul agent -server -bootstrap-expect 2 -ui -bind=0.0.0.0 -client=0.0.0.0
    # 上诉命令字段解析
        #8500 http 端口，用于 http 接口和 web ui
        #8300 server rpc 端口，同一数据中心 consul server 之间通过该端口通信
        #8301 serf lan 端口，同一数据中心 consul client 通过该端口通信
        #8302 serf wan 端口，不同数据中心 consul server 通过该端口通信
        #8600 dns 端口，用于服务发现
        #-bbostrap-expect 2: 集群至少两台服务器，才能选举集群leader
        #-ui：运行 web 控制台
        #-bind： 监听网口，0.0.0.0 表示所有网口，如果不指定默认未127.0.0.1，则无法和容器通信
        #-client ： 限制某些网口可以访问
# 获取第一个容器IP地址
    # docker inspect --format "{{ .NetworkSettings.IPAddress }}" consul1
    # 输出是：172.17.0.2
# 启动第二个consul服务：consul2， 并加入consul1（使用join命令）
    # docker run --name consul2 -d -p 8501:8500 consul agent -server -ui -bind=0.0.0.0 -client=0.0.0.0 -join 172.17.0.2
# 启动第三个consul服务：consul3， 并加入consul1（使用join命令）
    # docker run --name consul3 -d -p 8502:8500 consul agent -server -ui -bind=0.0.0.0 -client=0.0.0.0 -join 172.17.0.2
# .......(同样的步骤，可以启动第四，第五甚至更多的consul服务)
# 宿主机浏览器访问：http://localhost:8500 或者 http://localhost:8501 或者 http://localhost:8502

docker 启动 kafka
官方指引
 https://hub.docker.com/r/confluentinc/cp-kafka
 https://docs.confluent.io/current/quickstart/cos-docker-quickstart.html
运行镜像
  https://github.com/confluentinc/cp-docker-images
    kafka-single-node/docker-compose.yml
  docker-compose up -d
 
docker 启动Zipkin
官方指引
 https://hub.docker.com/r/openzipkin/zipkin
 https://github.com/openzipkin/docker-zipkin
获取镜像
 docker pull openzipkin/zipkin
运行Zipkin镜像
 docker run --name zipkin -d -p 9411:9411 openzipkin/zipkin
  
